{"version":3,"sources":["fbInstance.js","components/AuthForm.js","routes/Auth.js","components/Yweet.js","components/YweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireBaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","console","log","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","faGoogle","faGithub","Yweet","yweetObj","isOwner","userName","editing","setEditing","text","newYweet","setNewYweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","fileURL","toggleEditing","update","src","alt","time","faTrash","faPencilAlt","YweetFactory","userObj","yweetText","setYweetText","upload","setUpload","curTime","date","Date","m","getMonth","d","getDate","h","getHours","i","getMinutes","getFullYear","length","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","yweet","creatorId","createdAt","now","collection","add","maxLength","htmlFor","accept","image","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","width","height","Home","yweets","setYweets","users","setUsers","orderByTime","b","useEffect","userMap","Map","onSnapshot","snapshot","docs","map","set","displayName","yweetArray","sort","get","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyYweets","where","orderBy","updateProfile","signOut","push","Navigation","to","faUser","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setIsLoggedIn","setUserObj","updateUserDB","user","currentUser","args","onAuthStateChanged","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2828f99.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n/*\r\n\tfirebase 설정 및 연동을 수행\r\n*/\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: process.env.REACT_APP_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n\tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\r\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n\tappId: process.env.REACT_APP_APP_ID,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const fireBaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { useState } from \"react\";\r\nimport { authService } from \"fbInstance\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let data = \"\";\r\n\r\n    try {\r\n      if (newAccount) {\r\n        // create Account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // Log In\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    console.log(data);\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n    setError(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"auth-form\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"input-round input-gray\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"input-round input-gray\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"input-round input-blue login-btn\"\r\n        />\r\n        <div className=\"error-msg\">{error}</div>\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"auth-select-mode\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { authService, fireBaseInstance } from \"fbInstance\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport {\r\n  faGithub,\r\n  faGoogle,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n/*\r\n\t로그인/회원가입을 수행하는 페이지\r\n\tnewAccount가 true라면 회원가입, false라면 로그인을 수행\r\n*/\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n\r\n    let provider;\r\n\r\n    if (name === \"google\") {\r\n      provider = new fireBaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new fireBaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <FontAwesomeIcon icon={faTwitter} className=\"main-logo\" />\r\n      <AuthForm />\r\n      <div className=\"social-login\">\r\n        <button\r\n          name=\"google\"\r\n          onClick={onSocialClick}\r\n          className=\"input-round input-round-sm\"\r\n        >\r\n          Continue with Google\r\n          <FontAwesomeIcon icon={faGoogle} className=\"font-awesome\" />\r\n        </button>\r\n        <button\r\n          name=\"github\"\r\n          onClick={onSocialClick}\r\n          className=\"input-round input-round-sm\"\r\n        >\r\n          Continue with GitHub\r\n          <FontAwesomeIcon icon={faGithub} className=\"font-awesome\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { dbService, storageService } from \"fbInstance\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Yweet = ({ yweetObj, isOwner, userName }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newYweet, setNewYweet] = useState(yweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure want to delete this Yweet?\");\r\n\r\n    if (ok) {\r\n      await dbService.doc(`yweets/${yweetObj.id}`).delete();\r\n      await storageService.refFromURL(yweetObj.fileURL).delete();\r\n    } else {\r\n      console.log(\"false\");\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await dbService.doc(`yweets/${yweetObj.id}`).update({ text: newYweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewYweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"yweet\">\r\n      {editing ? (\r\n        <div>\r\n          <form onSubmit={onSubmit} className=\"yweet-edit-form\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your Yweet\"\r\n              onChange={onChange}\r\n              value={newYweet}\r\n              className=\"input-round yweet-edit-input border-black\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Yweet\"\r\n              className=\"input-round yweet-edit-button bg-blue\"\r\n            />\r\n            <button\r\n              onClick={toggleEditing}\r\n              className=\"input-round yweet-edit-button bg-red\"\r\n            >\r\n              Cancle\r\n            </button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {yweetObj.fileURL && (\r\n            <img\r\n              src={yweetObj.fileURL}\r\n              alt=\"cannot get\"\r\n              className=\"yweet-image\"\r\n            />\r\n          )}\r\n          <h3>{userName}</h3>\r\n          <h4>{yweetObj.text}</h4>\r\n          <h5>{yweetObj.time}</h5>\r\n          {isOwner ? (\r\n            <div className=\"yweet-button\">\r\n              <button onClick={onDeleteClick} className=\"yweet-button-item\">\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </button>\r\n              <button onClick={toggleEditing} className=\"yweet-button-item\">\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Yweet;\r\n","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbInstance\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst YweetFactory = ({ userObj }) => {\r\n  const [yweetText, setYweetText] = useState(\"\");\r\n  const [upload, setUpload] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n\r\n    setYweetText(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n\r\n    const image = files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setUpload(result);\r\n    };\r\n\r\n    reader.readAsDataURL(image);\r\n  };\r\n\r\n  const onClearImageClick = () => {\r\n    setUpload(\"\");\r\n  };\r\n\r\n  const curTime = () => {\r\n    const date = new Date();\r\n    const m = date.getMonth() + 1;\r\n    const d = date.getDate();\r\n    const h = date.getHours();\r\n    const i = date.getMinutes();\r\n    return (\r\n      (date.getFullYear() % 100) +\r\n      \"-\" +\r\n      (m > 9 ? m : \"0\" + m) +\r\n      \"-\" +\r\n      (d > 9 ? d : \"0\" + d) +\r\n      \" \" +\r\n      (h > 9 ? h : \"0\" + h) +\r\n      \":\" +\r\n      (i > 9 ? i : \"0\" + i)\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (yweetText.length) {\r\n      let fileURL = \"\";\r\n      if (upload !== \"\") {\r\n        const fileRef = storageService\r\n          .ref()\r\n          .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await fileRef.putString(upload, \"data_url\");\r\n        fileURL = await response.ref.getDownloadURL();\r\n      }\r\n\r\n      const yweet = {\r\n        text: yweetText,\r\n        creatorId: userObj.uid,\r\n        time: curTime(),\r\n        createdAt: Date.now(),\r\n        fileURL,\r\n      };\r\n      await dbService.collection(\"yweets\").add(yweet);\r\n      setYweetText(\"\");\r\n      setUpload(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"yweet-form\">\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={yweetText}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n          className=\"yweet-input-text input-round\"\r\n        />\r\n        <input type=\"submit\" value=\"→\" className=\"yweet-input-submit\" />\r\n        <br />\r\n        <label htmlFor=\"upload-image\" className=\"yweet-input-file-label\">\r\n          Add photos +\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n          id=\"upload-image\"\r\n          className=\"yweet-input-file\"\r\n        />\r\n        <br />\r\n        {upload && (\r\n          <>\r\n            <img\r\n              src={upload}\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n              alt=\"upload\"\r\n              className=\"yweet-upload-image\"\r\n            />\r\n            <br />\r\n            <button\r\n              onClick={onClearImageClick}\r\n              className=\"yweet-image-clear-button\"\r\n            >\r\n              Remove ✕\r\n            </button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YweetFactory;\r\n","import { dbService } from \"fbInstance\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Yweet from \"components/Yweet\";\r\nimport YweetFactory from \"components/YweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [yweets, setYweets] = useState([]);\r\n  const [users, setUsers] = useState();\r\n\r\n  const orderByTime = (a, b) => {\r\n    return b.createdAt - a.createdAt;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const userMap = new Map();\r\n\r\n    dbService.collection(\"users\").onSnapshot((snapshot) => {\r\n      snapshot.docs.map((doc) => {\r\n        userMap.set(doc.data().uid, doc.data().displayName);\r\n      });\r\n      setUsers(userMap);\r\n    });\r\n\r\n    dbService.collection(\"yweets\").onSnapshot((snapshot) => {\r\n      const yweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      yweetArray.sort(orderByTime);\r\n      setYweets(yweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <YweetFactory userObj={userObj} />\r\n      <div>\r\n        {yweets.map((yweet) => (\r\n          <Yweet\r\n            key={yweet.id}\r\n            yweetObj={yweet}\r\n            isOwner={yweet.creatorId === userObj.uid}\r\n            userName={users.get(yweet.creatorId)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fbInstance\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyYweets = async () => {\r\n    const yweets = await dbService\r\n      .collection(\"yweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n\r\n    console.log(yweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyYweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <form onSubmit={onSubmit} className=\"profile-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          className=\"input-round yweet-edit-input\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"input-round yweet-edit-button bg-blue\"\r\n        />\r\n        <div className=\"white-line\" />\r\n        <button\r\n          onClick={onLogOutClick}\r\n          className=\"input-round yweet-edit-button bg-red\"\r\n        >\r\n          Log Out\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <ul className=\"nav-ul\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon icon={faTwitter} className=\"menu-logo\" />\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item \">\r\n          <Link to=\"/profile\" className=\"nav-item-profile\">\r\n            <FontAwesomeIcon icon={faUser} className=\"menu-logo\" />\r\n            <span className=\"\">\r\n              {userObj?.displayName?.length\r\n                ? `${userObj.displayName}'s Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\n/*\r\n\tYwitter의 Router\r\n\t로그인이 되어 있다면 Home을, 아니라면 로그인을 담당하는 페이지(Auth)를 렌더링\r\n*/\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      <div className=\"app-router\">\r\n        {isLoggedIn && <Navigation userObj={userObj} />}\r\n        <Switch>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n              <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n              <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n          )}\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService, dbService } from \"fbInstance\";\n\nfunction App() {\n  /*\n   * authService.currentUser로는 실제 로그인 여부를 알 수 없기 때문에\n   * firebase의 onAuthStateChanged 메소드를 통해 상태를 변경\n   */\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const updateUserDB = async (uid, displayName) => {\n    displayName = displayName?.length ? displayName : \"anonymous\";\n\n    const user = {\n      uid,\n      displayName,\n    };\n\n    if (user) {\n      await dbService.collection(\"users\").doc(user.uid).set({\n        displayName: user.displayName,\n        uid: user.uid,\n      });\n    }\n  };\n\n  const refreshUser = async () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n    updateUserDB(user.uid, user.displayName);\n    /* or\n      Object.assign(old, new); => old Object를 new Object로 update\n      setUserObj(Object.assign({}, user));\n    */\n  };\n\n  useEffect(() => {\n    /*\n\t\t\tfirebase가 로드 되거나, 로그인/회원가입 등의 상태 변화가 있을 시 호출됨\n\t\t\t회원가입시에도 로그인이 이루어지기 때문에 user가 생성되는데, 이 때 isLoggedIn을 true로 변경함\n\t\t*/\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        updateUserDB(user.uid, user.displayName);\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      // firebase load가 완료됨\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {init ? (\n        <AppRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}